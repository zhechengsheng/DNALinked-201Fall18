Your Name here
Zhecheng Sheng
Your NetID here
zs68
Your Partner's name here (or erase)
Your Partner's NetID here (or erase)

Questions to answer in your analysis.txt 
In answering these questions you should refer to the timings you generated from the DNABenchmark program on your machine. Use these timings to answer three questions.

Question 1: are the benchmark timings for StringStrand consistent with the explanation below that the time to execute cutAndSplice is O(b2S)? 
Note that the value of b is half the number of calls to append since each cut (except the first) is modeled by two calls of append in the method cutAndSplice
-- see the code. This means that b2 will be constant in the benchmark, but S will vary. 

dna length = 4,639,221
cutting at enzyme gaattc
-----
Class	                splicee	      recomb	time	appends
-----
StringStrand:	            256	      4,800,471	0.565	1290
StringStrand:	            512	      4,965,591	0.580	1290
StringStrand:	          1,024	      5,295,831	0.582	1290
StringStrand:	          2,048	      5,956,311	0.664	1290
StringStrand:	          4,096	      7,277,271	0.831	1290
StringStrand:	          8,192	      9,919,191	1.144	1290
StringStrand:	         16,384	     15,203,031	2.030	1290
StringStrand:	         32,768	     25,770,711	3.156	1290
StringStrand:	         65,536	     46,906,071	6.318	1290
StringStrand:	        131,072	     89,176,791	13.704	1290
StringStrand:	        262,144	    173,718,231	29.347	1290
StringStrand:	        524,288	    342,801,111	63.287	1290
StringStrand:	      1,048,576	    680,966,871	125.020	1290
StringStrand:	      2,097,152	  1,357,298,391	231.350	1290
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at StringStrand.append(StringStrand.java:70)
	at IDnaStrand.cutAndSplice(IDnaStrand.java:41)
	at DNABenchmark.strandSpliceBenchmark(DNABenchmark.java:67)
	at DNABenchmark.main(DNABenchmark.java:113)
Question 2: are the benchmark timings for StringBuilderStrand consistent with the explanation below that the time to execute cutAndSplice is O(bS)? 



Note that the value of b is half the number of calls to append since each cut (except the first) is modeled by two calls of append in the method cutAndSplice
-- see the code. This means that b will be constant in the benchmark, but S will vary.

dna length = 4,639,221
cutting at enzyme gaattc
-----
Class	                splicee	      recomb	time	appends
-----
StringBuilderStrand:	            256	      4,800,471	0.029	1290
StringBuilderStrand:	            512	      4,965,591	0.023	1290
StringBuilderStrand:	          1,024	      5,295,831	0.009	1290
StringBuilderStrand:	          2,048	      5,956,311	0.009	1290
StringBuilderStrand:	          4,096	      7,277,271	0.007	1290
StringBuilderStrand:	          8,192	      9,919,191	0.010	1290
StringBuilderStrand:	         16,384	     15,203,031	0.014	1290
StringBuilderStrand:	         32,768	     25,770,711	0.036	1290
StringBuilderStrand:	         65,536	     46,906,071	0.029	1290
StringBuilderStrand:	        131,072	     89,176,791	0.135	1290
StringBuilderStrand:	        262,144	    173,718,231	0.230	1290
StringBuilderStrand:	        524,288	    342,801,111	0.483	1290
StringBuilderStrand:	      1,048,576	    680,966,871	0.800	1290
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3744)
	at java.base/java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:146)
	at java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:512)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:141)
	at StringBuilderStrand.append(StringBuilderStrand.java:70)
	at IDnaStrand.cutAndSplice(IDnaStrand.java:41)
	at DNABenchmark.strandSpliceBenchmark(DNABenchmark.java:67)
	at DNABenchmark.main(DNABenchmark.java:113) 

Question 3: Explain why the time for LinkStrand does not change much at all over all the runs in the benchmark program. 
Explain why you think memory is exhausted at the specific strand size you see in your timings -- as compared to exhaustion for String and StringBuilder.
dna length = 4,639,221
cutting at enzyme gaattc
-----
Class	                splicee	      recomb	time	appends
-----
LinkStrand:	            256	      4,800,471	0.026	1290
LinkStrand:	            512	      4,965,591	0.022	1290
LinkStrand:	          1,024	      5,295,831	0.005	1290
LinkStrand:	          2,048	      5,956,311	0.004	1290
LinkStrand:	          4,096	      7,277,271	0.004	1290
LinkStrand:	          8,192	      9,919,191	0.006	1290
LinkStrand:	         16,384	     15,203,031	0.004	1290
LinkStrand:	         32,768	     25,770,711	0.004	1290
LinkStrand:	         65,536	     46,906,071	0.005	1290
LinkStrand:	        131,072	     89,176,791	0.004	1290
LinkStrand:	        262,144	    173,718,231	0.004	1290
LinkStrand:	        524,288	    342,801,111	0.004	1290
LinkStrand:	      1,048,576	    680,966,871	0.005	1290
LinkStrand:	      2,097,152	  1,357,298,391	0.004	1290
LinkStrand:	      4,194,304	  2,709,961,431	0.006	1290
LinkStrand:	      8,388,608	  5,415,287,511	0.004	1290
LinkStrand:	     16,777,216	 10,825,939,671	0.004	1290
LinkStrand:	     33,554,432	 21,647,243,991	0.005	1290
LinkStrand:	     67,108,864	 43,289,852,631	0.005	1290
LinkStrand:	    134,217,728	 86,575,069,911	0.006	1290
LinkStrand:	    268,435,456	173,145,504,471	0.007	1290
LinkStrand:	    536,870,912	346,286,373,591	0.005	1290
LinkStrand:	  1,073,741,824	692,568,111,831	0.011	1290
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3744)
	at java.base/java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:146)
	at java.base/java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:512)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:141)
	at DNABenchmark.main(DNABenchmark.java:110)